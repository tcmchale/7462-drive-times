---
title: "Assignment 8"
author: Thomas McHale
date: 12 April 2023
format: html
editor: visual
echo: true
warning: false
embed-resources: true
---

```{r}

## Load the API key
api_key <- Sys.getenv("ACS_API_KEY")

#load packages we may need
library(tidyverse)
library(lubridate)
library(gt)
library(paletteer)
library(ggridges)
library(plotly)
library(gtExtras)
library(sf)
library(tidycensus)
library(leaflet)
library(osmdata)
library(tigris)
library(ggplot2)
library(ggmap)
library(ggthemes)
library(viridis)

```

## Task 3 from Assignment 6

```{r}

#get health insurance data from ACS
mn_health <- get_acs(
  geography = "tract",
  variables = c("B27001_007" #uninsured
                , "B01003_001" #population
                ),
  state     = "MN",
  county    = "Hennepin",
  year      = 2020,
  geometry  = TRUE,
  cb        = FALSE,
)
mn_health_wide <- pivot_wider(
  data = mn_health,
  id_cols = c("GEOID", "geometry"),
  names_from = "variable",
  values_from = c("estimate", "moe")
)

#fraction percent uninsured
mn_health_wide$perc_uninsured <- mn_health_wide$estimate_B27001_007 / mn_health_wide$estimate_B01003_001

## create the map
health.gg <- ggplot() + 
  geom_sf(data = mn_health_wide, 
          aes(fill = perc_uninsured,
              text = paste("Percentage uninsured: ", 
                            scales::percent(perc_uninsured, accuracy = 0.1), 
                            "<br>Total population: ", estimate_B01003_001))) + 
  labs(title = "Hennepin County 2020 ACS Health Insurance") + 
  theme_void() + 
  scale_fill_viridis_c("Percentage uninsured", labels = scales::percent_format(accuracy = 1)) + 
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
  coord_sf(crs = st_crs("+proj=longlat +datum=WGS84")) # set the coordinate reference system to avoid warning
health.gg

ggplotly(health.gg, tooltip = "text") %>%
  layout(title = "Hennepin County 2020 ACS Health Insurance",
         xaxis = list(title = ""),
         yaxis = list(title = ""))
```
